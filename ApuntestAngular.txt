//Crear nueva aplicacion
	ng new "nombreAplicacion"

//Crear un nuevo module
	ng g m nombreModulo

//Crear un nuevo componente 				//sin archivo prueba // sin archivo css independiente
	ng g c rutaModulo/nombreComponente      --skipTests -is

//crear un servicio
		//Carpeta donde crear // carpeta servicio // nombreServicio
	ng g s gifs/services/gifs

// Generar build a producción
	ng build --prod


//Instalacion de primeNG.
npm install primeng

//generar un router //creacion manual tambien se puede hacer ng g router
	ng g m appRouter --flat    ///--flat para que genere sin carpeta

//generar guard
	//Es otro tipo de servicio que sirve para controlar quien puede acceder a rutas especificas dentro del app-routing
	ng g guard "ruta/"

//generar un modulo con su routing
	ng g m "nombre" --routing

//crear directivas
	ng g d "path/nombre"

//Instalacion de material 
ng add @angular/material

// Angular flex
npm i @angular/flex-layout



//Para levantar el backend de pruebas se utilizar el ubicandonos con cmd en la ruta del archivo .db
https://www.npmjs.com/package/json-server

json-server --watch db.json



//Instalacion para charts, graficos doc (https://valor-software.com/ng2-charts/)

npm install --save ng2-charts
	Dependencia:
		npm install --save chart.js


/****************************************************** CONFIGURANDO BACK END

// Creacion de back end auth
	npm init

//para llamar o ejecutar un archivo node
	node "nombre.js"

//instalacion nodemon para lanzar rapido el node, y no estar ejecutando manualmente.
//esto detecta un cambio 
	//se instala de manera global
	npm install -g nodemon

	//para ejecutar nodemond apuntando al archivo, y ejecutar el servicio, de manera local
	nodemon index.js

	//Comando para ejecuta el script, cuando ya este desplegada el servicio
	npm run dev


//Instalacion de herramientas para implementar el back end
//situarse en la carpeta del proyecto

npm i bcryptjs cors dotenv express express-validator jsonwebtoken mongoose

bcryptjs : 	hace encriptacion (hash de las contraseñas)
cors : 		para hacer peticiones cros domain, permitir que el servidor acepte peticiones de 		dominios que se necesita o se requiere.
dotenv : 	para configurar variables de entorno
express : 	para montar un servidor REST de manera rapida 
express-validator : 	para hacer validaciones en express (framework)
jsonwebtoken : 	para crear los tokens
mongoose : 		para realizar la conexion con la base de datos mongo


//INSTALACION PARA MOSTRAR MENSAJES DE ALERTAS
//https://sweetalert2.github.io/#download
npm install sweetalert2